<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAAPoAAAD6CAYAAACI7Fo9AAAABGdBTUEAALGPC/xhBQAAAAlwSFlzAAAO
        wAAADsABataJCQAAF4hJREFUeF7tnT+obc1Zhz9EBRGxiKAIFpoINiIYLLSQfEGwUEwECzvBIrEyRDtt
        koCNdoJ+SaVgwEZIkSogJFhYSATRyiKKCHYRTZcIbs9zvO/Ne977zvq/197n3OeBH/fstWZmzdp7fjPv
        zKy97zsiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIi
        IiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIi
        IiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIichCXom896BsPEpEXQjV5lYg8czpjdxKR
        Z0pn6Ee9/8d/7PKbn/nJy8/+0g/n4yLyzMgGfqJf+a0PXD77d7/4Whj+e7/7O+O8iDwTnhg7ixE8mzz0
        +5//Oc0u8ox4YuyskclDjOwpvYjcKdmoT/SBH/muyx996d3W4FmE9SmfiASXz71zubWoxpQIzTtjd4oF
        OkL5b/zxd7TXU+pt082NXk1dVRfflogIgLy/8BP9NZV623RTo6cFtFYYtjPynAjzo+w/+Gh/baXeJt3E
        6ITUcyZHa0L2qlic4zr/9off09ZDqbdFNzF6hNZT2hKyV8V83RBeve063egf//k3TV21NWSvIoR/3w+8
        77HMP/n4D7b1Uept0KlGx2zV1FWE2ku20pbqd977mdflugqv3ladZvR/+Mz3vWHqTkeE7FURwhNNdHVT
        6qXrFKMzki6Zl889/bZVeRX+S5/o66jUS9YpRmcxrJq66uiQvSpW4elwujoq9ZJ1daOzj11N3QkjdgY9
        Uny9lWu5MKfeNl3V6Evn5dcK2auIGLieC3PqbdPVjL50Xs721zVD9qpYmPOJOfU26WpGX7Jfjtj+6gx5
        LcXCnKO6ept0FaOzst2ZumoqZMeQdAJoz6OwneLrrI7q6m3R4UZnlIytrCmNVtkxdhfyE+IfucdOeXc5
        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
        icgMnXGOUqY7f5REZAGdefZqRJd2j0RERERERERERERERERERERERERERERERERERERERERERERERERE
        RERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERE
        RERERERERERERERERERERERERERERERERERERERERN4K3nnn/wCcr7nIki1XwQAAAABJRU5ErkJggg==
</value>
  </data>
</root>